// <auto-generated />
using System;
using Gestion_Bibliotheque.Infra.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gestion_Bibliotheque.Infra.Migrations
{
    [DbContext(typeof(applicationDbContext))]
    [Migration("20231225000717_mv1")]
    partial class mv1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("Gestion_Bibliotheque.Domain.Entity.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("7b398a20-6dae-4311-a78e-9fea5e7c4d00"),
                            Name = "Administrateur"
                        },
                        new
                        {
                            RoleId = new Guid("0f1072d5-e635-4cec-9d36-7c0aed643df7"),
                            Name = "Etudiant"
                        },
                        new
                        {
                            RoleId = new Guid("1d464c95-93f7-458a-84ed-b8ff32cc841f"),
                            Name = "Etudiant_VIP"
                        },
                        new
                        {
                            RoleId = new Guid("54f31f1d-38ff-462e-861d-49ece7862c17"),
                            Name = "Etudiant_Bronze"
                        });
                });

            modelBuilder.Entity("Gestion_Bibliotheque.Domain.Entity.Utilisateur", b =>
                {
                    b.Property<Guid>("UtilisateurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ecol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("JobInTech")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UtilisateurId");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("Gestion_Bibliotheque.Domain.Entity.Utilisateur_Role", b =>
                {
                    b.Property<Guid>("Utilisateur_RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UtilisateurId")
                        .HasColumnType("TEXT");

                    b.HasKey("Utilisateur_RoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Utilisateur_Roles");
                });

            modelBuilder.Entity("RoleUtilisateur", b =>
                {
                    b.Property<Guid>("RolesRoleId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UtilisateurId")
                        .HasColumnType("TEXT");

                    b.HasKey("RolesRoleId", "UtilisateurId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("RoleUtilisateur");
                });

            modelBuilder.Entity("Gestion_Bibliotheque.Domain.Entity.Utilisateur_Role", b =>
                {
                    b.HasOne("Gestion_Bibliotheque.Domain.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Bibliotheque.Domain.Entity.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("RoleUtilisateur", b =>
                {
                    b.HasOne("Gestion_Bibliotheque.Domain.Entity.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Bibliotheque.Domain.Entity.Utilisateur", null)
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
